name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FORCE_COLOR: 1

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    permissions:
      attestations: write
      contents: read
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            codecov_os: macos
          - os: ubuntu-latest
            codecov_os: linux
          - os: windows-latest
            codecov_os: windows

    steps:

    - name: Checkout code
      uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

    - name: Setup Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: '20.x'

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: pwsh
      run: echo "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

    - name: Setup npm cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Install packages
      run: npm ci

    - name: Build and Test
      shell: pwsh
      run: ./build.ps1

    - uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4.3.1
      name: Upload coverage to Codecov
      with:
        file: ./coverage/lcov.info
        flags: ${{ matrix.codecov_os }}
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Generate SBOM
      uses: anchore/sbom-action@7ccf588e3cf3cc2611714c2eeae48550fbc17552 # v0.15.11
      if: runner.os == 'Linux'
      with:
        path: .
        output-file: sbom.spdx.json

    - name: Attest dist
      uses: actions/attest-sbom@c168f2354d9bf9a30b63bd0c532cdf3f3bbd6dc3 # v1.0.0
      if: runner.os == 'Linux'
      with:
        sbom-path: sbom.spdx.json
        subject-path: ./dist/**/*.js

  lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

    - name: Add actionlint problem matcher
      run: echo "::add-matcher::.github/actionlint-matcher.json"

    - name: Lint workflows
      uses: docker://rhysd/actionlint@sha256:5acca218639222e4afbc82fc6e9ef56cbe646ade3b07f3f5ec364b638258a244 # v1.7.0
      with:
        # Remove -ignore once v1.6.28 released - see https://github.com/rhysd/actionlint/pull/418#issuecomment-2089713941
        args: -color -ignore "attestations"

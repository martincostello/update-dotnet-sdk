name: regenerate-dist

on:
  workflow_dispatch:
    inputs:
      npm-audit-fix:
        description: 'Whether to run npm audit fix'
        type: boolean
        required: false
        default: false

permissions: {}

jobs:
  regenerate:
    runs-on: [ ubuntu-latest ]

    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false

    steps:

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          filter: 'tree:0'
          show-progress: false
          token: ${{ secrets.COSTELLOBOT_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: '20.x'

      - name: Install packages
        run: npm ci

      - name: Apply audit fixes
        if: inputs.npm-audit-fix
        run: npm audit fix

      - name: Regenerate dist
        run: npm run publish

      - name: Push changes to GitHub
        id: push-changes
        shell: pwsh
        env:
          GIT_COMMIT_USER_EMAIL: ${{ vars.GIT_COMMIT_USER_EMAIL }}
          GIT_COMMIT_USER_NAME: ${{ vars.GIT_COMMIT_USER_NAME }}
        run: |
          $gitStatus = (git status --porcelain)

          if ([string]::IsNullOrEmpty($gitStatus)) {
            Write-Output "No changes to commit."
            return 0
          }

          $branchName = "regenerate-dist"

          git config user.email ${env:GIT_COMMIT_USER_EMAIL} | Out-Null
          git config user.name ${env:GIT_COMMIT_USER_NAME} | Out-Null
          git fetch origin --no-tags | Out-Null
          git rev-parse --verify --quiet "remotes/origin/${branchName}" | Out-Null

          if ($LASTEXITCODE -eq 0) {
            Write-Output "Branch ${branchName} already exists."
            exit 0
          }

          git checkout -b $branchName
          git add .
          git commit -m "Regenerate dist`n`nRegenerate the contents of dist."

          if ($LASTEXITCODE -ne 0) {
            Write-Output "No changes to commit."
            return 0
          }

          git push -u origin $branchName

          "branch-name=${branchName}" >> $env:GITHUB_OUTPUT
          "regenerated=true" >> $env:GITHUB_OUTPUT

      - name: Create pull request
        if: steps.push-changes.outputs.regenerated == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          BASE_BRANCH: ${{ github.event.repository.default_branch }}
          HEAD_BRANCH: ${{ steps.push-changes.outputs.branch-name }}
        with:
          github-token: ${{ secrets.COSTELLOBOT_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const workflowUrl = `${process.env.GITHUB_SERVER_URL}/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            const { data: pr } = await github.rest.pulls.create({
              title: 'Regenerate dist',
              owner,
              repo,
              head: process.env.HEAD_BRANCH,
              base: process.env.BASE_BRANCH,
              body: [
                'Regenerate the contents of `dist`.',
                '',
                `This pull request was generated by [GitHub Actions](${workflowUrl}).`
              ].join('\n')
            });

            core.notice(`Created pull request ${owner}/${repo}#${pr.number}: ${pr.html_url}`);
